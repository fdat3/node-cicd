workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"      
      when: never
    - when: always

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: "1.0"
  DEV_SERVER_HOST: 18.138.231.213
  DEV_SERVER_ENDPOINT: http://ec2-18-138-231-213.ap-southeast-1.compute.amazonaws.com:3000
  
stages:
  - test
  - build
  - deploy

run_unit_test:
  stage: test
  image: node:17-alpine3.14
  tags:
    - ec2
    - docker
    - remote
  before_script:
    - cd app
    - npm install
  script:
    - npm test
  artifacts:
    when: always
    reports:
      junit: app/junit.xml

build_image:
  stage: build
  tags:
    - ec2
    - shell
    - remote
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .

push_image:
  stage: build
  needs:
    - build_image
  tags:
    - ec2
    - shell
    - remote
  before_script:
    - echo "Docker registry url is $CI_REGISTRY"
    - echo "Docker registry username is $CI_REGISTRY_USER"
    - echo "Docker image repo is $CI_REGISTRY_IMAGE"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy_image:
  stage: deploy
  tags:
    - ec2
    - shell
    - remote
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script: 
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yaml ubuntu@$DEV_SERVER_HOST:/home/ubuntu
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$DEV_SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&

        export DC_IMAGE_NAME=$IMAGE_NAME && 
        export DC_IMAGE_TAG=$IMAGE_TAG &&

        docker-compose down &&
        docker-compose up -d"
        
  environment:
    name: dev
    url: $DEV_SERVER_ENDPOINT

